/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>



&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };
 
/* Layers */
#define AL1 0
#define AL2 1
#define SM1 2
#define SM2 3
#define NUM 4
#define SYS 5
#define BT 6
#define FUN 7
#define AL2U 8
/ { 
    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <30>;
        key-positions = <3 4 5>;
            bindings = <&to SYS>;
        };
        combo_caps {
            timeout-ms = <30>;
        key-positions = <10 11 12>;
            bindings = <&caps_word>;
        };
        combo_num {
            timeout-ms = <30>;
            key-positions = <0 1 2>;
            bindings = <&to NUM>;
        };
        combo_bt  {
            timeout-ms = <10>;
            key-positions = <11 12>;
            bindings = <&to BT>;
        layers = <SM1>;
        };
        combo_fun  {
            timeout-ms = <10>;
            key-positions = <7 8>;
            bindings = <&to FUN>;
        layers = <AL1>;
        };
        lalt {
            timeout-ms = <20>;
        key-positions = <8 9>;
            bindings = <&kp LALT>; 
        layers = <SYS>;
        };
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
        };
        sr: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;
        retro-tap;
        };
        hl_l: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_L";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
        };
        hl_r: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
        };
    td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    shrep: shift_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_REPEAT";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&key_repeat>;
        };
    alpha2macro: behavior_macro_1 {
        compatible = "zmk,behavior-macro";
        label = "MACRO1";
        #binding-cells = <0>;
        bindings = < &sl AL2 >;
    };
    caps_alpha2macro: behavior_macro_2 {
        compatible = "zmk,behavior-macro";
        label = "MACRO2";
        #binding-cells = <0>;
        bindings = < &sl AL2U >;
    };
    };
//                  0       1       2                   3       4           5
//          6       7       8       9                   10      11          12          13
//                          14      15                  16      17
       keymap {
                compatible = "zmk,keymap";
                
                alpha1 {
        bindings = <
                            &hm_l LCTL L    &hm_l LALT G    &hm_l LGUI D                &hm_r RGUI H    &hm_r LALT U        &hm_r RCTL O
            &hl_l NUM I     &hl_l SM2 S     &hl_l SM1 R     &hl_l SYS T                 &hl_r SYS N     &hl_r SM1 E         &hl_r SM2 A     &hl_r NUM C
                                &mt LC(LS(LALT)) SPC        &shrep LSHIFT 0             &caps_alpha2macro     &alpha2macro
        >;
        };
                alpha2 {
        bindings = <
                    &kp V       &kp W               &kp M           &kp F       &kp SQT             &kp Z
        &kp Q       &kp J       &kp P               &kp K           &kp B       &kp DOT             &kp X       &kp Y
                                &sr LSHIFT AL1      &none           &none       &sl AL2U
        >;
        };

                sym1 {
        bindings = <
                    &kp STAR    &kp LS(N3)  &kp DLLR                       &kp LS(COMMA)   &kp LS(DOT)     &kp MINUS
        &kp BSLH   &kp GRAVE    &kp TILDE   &kp CARET                      &kp LBKT        &kp RBKT        &kp PIPE    &kp SLASH
                                &trans      &trans                         &trans      &trans
        >;
        };
        sym2 {
        bindings = <
                    &kp ATSN    &kp QMARK        &kp LA(N3)                &kp LPRN    &kp RPRN    &kp MINUS
        &kp SEMI    &kp PRCNT   &kp EXCL         &kp LS(MINUS)             &kp LBRC    &kp RBRC    &kp AMPS    &kp COLON
                                &trans          &trans                     &trans      &trans

        >;
        };

        num {
        bindings = <
                          &hm_l LCTL DOT      &hm_l LALT N0   &hm_l LGUI N1       &hm_r RGUI N2   &hm_r LALT N3    &hm_r RCTL N4
        &td SLASH MINUS   &td STAR PLUS       &kp N5          &kp N6              &kp N7          &kp N8           &kp N9         &kp EQUAL
                                              &sr LSHIFT AL1  &trans              &trans          &kp RGUI
        >;
        };

        sys {
        bindings = <
                            &kp ESC        &kp LG(LS(LBKT))    &kp LG(LS(RBKT))         &td LG(V) LG(C)     &td PG_UP UP    &kp BKSP
        &td LG(GRAVE) TAB   &kp DEL        &td HOME LG(LBKT)   &td END LG(RBKT)         &td LG(S) LEFT      &td PG_DN DOWN  &kp RIGHT   &kp RET
                                           &sr LSHIFT AL1      &kp LALT                 &kp LSHIFT          &kp RGUI
        >;
        };

        bt {
        bindings = <
                  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2           &bt BT_SEL 3     &bt BT_SEL 4   &trans
        &trans    &reset          &trans        &bootloader            &bootloader      &trans         &reset  &bt BT_CLR
                                  &to AL1       &none                  &none     &none
        >;
        };
        fun {
            bindings = <
                     &kp F11   &kp F10   &kp F1           &kp F2   &kp F3   &kp F4
     &kp C_VOL_DN    &kp F12   &kp F5    &kp F6           &kp F7   &kp F8   &kp F9  &kp C_VOL_UP
                               &to AL1   &none            &none    &kp C_MUTE
                >;
        };
                alpha2cap {
        bindings = <
                    &kp LS(V)   &kp LS(W)   &kp LS(M)           &kp LS(F)   &kp DQT      &kp LS(Z)
        &kp LS(Q)   &kp LS(J)   &kp LS(P)   &kp LS(K)           &kp LS(B)   &kp COMMA    &kp LS(X)   &kp LS(Y)
                                &to AL1    &trans            &trans  &none
        >;
        };
        
    };
};
